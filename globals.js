// window.client (obj)
// window.ppl[usr]   returns teams 
// window.isExited  (bool, if is in prebattlezone)
// window.gameStatus[user]  (bool, true means the game is in progress if the game is in progress)
//  window.runningEngineCount (how many engines currently running)
// window.username (string, user using the lobby)
//inputGrabber(heading="unifiedInputField",subHeading="Things typed will be retrieved by the caller",exampleInput="main",callback)
// window.nowinBattle (int, which battle the user is in)
//window.displayedChat (int, which chat is being displayed)
//window.dbug (bool)
//window.nowHostedby current btl hosted by which autohost
//window.nowHostingPlayer current btl hosted by which player
//window.roomPort[bid] returns the port of the room
//window.roomIP[battleid]=ip
//removeAllChildNodes(parents)  clears all child node
//window.isLoading bool, if is loading
//loading()
//window.isLoggedin bool if is logged in
//window.isLoggingin if is logging in 
//window.loadingCallback //call back func after a loading ends
//window.teamLeaders //returns the user that's been designated as the leader
//window.zone="lobby" currently in what part of the lobby
//window.userVolume //1 to 100, an user set value that multiplies into window.audio.volume
//window.audio.volume //lobby volume
//window.userFXVolume//1 to 100, an user set value that multiplies into window.FXaudio.volume 
//window.FXaudio.volume  //notif or FX volume
//window.userNotifVolume//1 to 100, an user set value that multiplies into window.FXaudio.volume 
//window.btlToken  the token to the current btl!
//storage // storage.set('unicorn', 'ðŸ¦„');console.log(storage.get('unicorn'));
//os //generated by os= require('os');
//fs //generated by fs = require('fs');
//process.env.WDIR  //working dir
//clearScreen(parentDiv)
//window.networkBuffer (stores incomplete network cmd)
//window.isFXPlaying=false
//playSound()
//playFX()
//displayedChat
//window.polls[cmd]   returns {'id':123,'ppl':'xxx fvg rdg'} by querrying their cmd
//window.totalPpl   total number of ppl in game
//window.minimapCache={}
//notice(true,'ACCESS DENIED ',reason)
//window.currentMap=mapName
//window.channelLastAuthor[chanName] returns the latest poster of a channel
//window.specppl spectator list
